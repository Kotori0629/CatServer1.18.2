--- a/net/minecraft/server/level/ChunkMap.java
+++ b/net/minecraft/server/level/ChunkMap.java
@@ -108,7 +_,7 @@
    public static final int f_140127_ = 33 + ChunkStatus.m_62421_();
    public static final int f_143033_ = 31;
    private final Long2ObjectLinkedOpenHashMap<ChunkHolder> f_140129_ = new Long2ObjectLinkedOpenHashMap<>();
-   private volatile Long2ObjectLinkedOpenHashMap<ChunkHolder> f_140130_ = this.f_140129_.clone();
+   public volatile Long2ObjectLinkedOpenHashMap<ChunkHolder> f_140130_ = this.f_140129_.clone();
    private final Long2ObjectLinkedOpenHashMap<ChunkHolder> f_140131_ = new Long2ObjectLinkedOpenHashMap<>();
    private final LongSet f_140132_ = new LongOpenHashSet();
    final ServerLevel f_140133_;
@@ -122,14 +_,14 @@
    private final ChunkTaskPriorityQueueSorter f_140141_;
    private final ProcessorHandle<ChunkTaskPriorityQueueSorter.Message<Runnable>> f_140142_;
    private final ProcessorHandle<ChunkTaskPriorityQueueSorter.Message<Runnable>> f_140143_;
-   private final ChunkProgressListener f_140144_;
+   public final ChunkProgressListener f_140144_;
    private final ChunkStatusUpdateListener f_143031_;
-   private final ChunkMap.DistanceManager f_140145_;
+   public final ChunkMap.DistanceManager f_140145_;
    private final AtomicInteger f_140146_ = new AtomicInteger();
    private final StructureManager f_140147_;
    private final String f_182284_;
    private final PlayerMap f_140149_ = new PlayerMap();
-   private final Int2ObjectMap<ChunkMap.TrackedEntity> f_140150_ = new Int2ObjectOpenHashMap<>();
+   public final Int2ObjectMap<ChunkMap.TrackedEntity> f_140150_ = new Int2ObjectOpenHashMap<>();
    private final Long2ByteMap f_140151_ = new Long2ByteOpenHashMap();
    private final Long2LongMap f_202981_ = new Long2LongOpenHashMap();
    private final Queue<Runnable> f_140125_ = Queues.newConcurrentLinkedQueue();
@@ -476,6 +_,7 @@
             if (this.f_140131_.remove(p_140182_, p_140183_) && p_203002_ != null) {
                if (p_203002_ instanceof LevelChunk) {
                   ((LevelChunk)p_203002_).m_62913_(false);
+                  net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkEvent.Unload(p_203002_));
                }
 
                this.m_140258_(p_203002_);
@@ -658,8 +_,14 @@
             levelchunk.m_62952_();
             if (this.f_140132_.add(chunkpos.m_45588_())) {
                levelchunk.m_62913_(true);
+               try {
+               p_140384_.currentlyLoading = levelchunk; // Forge - bypass the future chain when getChunk is called, this prevents deadlocks.
                levelchunk.m_156369_();
                levelchunk.m_187958_(this.f_140133_);
+               net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkEvent.Load(levelchunk));
+               } finally {
+                   p_140384_.currentlyLoading = null; // Forge - Stop bypassing the future chain.
+               }
             }
 
             return levelchunk;
@@ -762,6 +_,7 @@
 
             this.f_140133_.m_46473_().m_6174_("chunkSave");
             CompoundTag compoundtag = ChunkSerializer.m_63454_(this.f_140133_, p_140259_);
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkDataEvent.Save(p_140259_, p_140259_.getWorldForge() != null ? p_140259_.getWorldForge() : this.f_140133_, compoundtag));
             this.m_63502_(chunkpos, compoundtag);
             this.m_140229_(chunkpos, chunkstatus.m_62494_());
             return true;
@@ -818,6 +_,7 @@
 
    protected void m_183754_(ServerPlayer p_183755_, ChunkPos p_183756_, MutableObject<ClientboundLevelChunkWithLightPacket> p_183757_, boolean p_183758_, boolean p_183759_) {
       if (p_183755_.f_19853_ == this.f_140133_) {
+         net.minecraftforge.event.ForgeEventFactory.fireChunkWatch(p_183758_, p_183759_, p_183755_, p_183756_, this.f_140133_);
          if (p_183759_ && !p_183758_) {
             ChunkHolder chunkholder = this.m_140327_(p_183756_.m_45588_());
             if (chunkholder != null) {
@@ -1070,7 +_,7 @@
    }
 
    protected void m_140199_(Entity p_140200_) {
-      if (!(p_140200_ instanceof EnderDragonPart)) {
+      if (!(p_140200_ instanceof net.minecraftforge.entity.PartEntity)) {
          EntityType<?> entitytype = p_140200_.m_6095_();
          int i = entitytype.m_20681_() * 16;
          if (i != 0) {
@@ -1231,12 +_,12 @@
       }
    }
 
-   class TrackedEntity {
+   public class TrackedEntity {
       final ServerEntity f_140471_;
       final Entity f_140472_;
       private final int f_140473_;
       SectionPos f_140474_;
-      private final Set<ServerPlayerConnection> f_140475_ = Sets.newIdentityHashSet();
+      public final Set<ServerPlayerConnection> f_140475_ = Sets.newIdentityHashSet();
 
       public TrackedEntity(Entity p_140478_, int p_140479_, int p_140480_, boolean p_140481_) {
          this.f_140471_ = new ServerEntity(ChunkMap.this.f_140133_, p_140478_, p_140480_, p_140481_, this::m_140489_);
